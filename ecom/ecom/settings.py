"""
Django settings for ecom project.

Generated by 'django-admin startproject' using Django 3.0.8.

For more information on this file, see
https://docs.djangoproject.com/en/3.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.0/ref/settings/
"""
from django.conf import settings
import os

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/3.0/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = '1x6uwe63v9+g_^*-lcd0+j@)nz7mjbe(=&&=w@movk2n8gq%%+'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

CORS_ORIGIN_ALLOW_ALL = True

CORS_ALLOW_METHODS = [    'DELETE',    'GET',    'OPTIONS',    'PATCH',    'POST',    'PUT',]

# ALLOWED_HOSTS = ['*'] //this was blank and apparentl should have had the astrict for all that is my fault but the above is reccomended practice for production anyway 


# Application definition

INSTALLED_APPS = [
    #any time you make a new app it need to go here so that the project is aware of its existence
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    # all the apps i bring in below here above came with the create project
    'corsheaders',
    # I added these to in for rest frame work authtoken allows for custom signup 
    'rest_framework',
    'rest_framework.authtoken',
    'api',
    'api.category',
    'api.product',
    'api.user',
    'api.order',
    'api.payment',
    # pipenv django-storages and pipenv install boto3 to handle static file s3 buckets
    'storages',
]

CSP_DEFAULT_SRC = ("'self'",)
CSP_SCRIPT_SRC = ("'self'", "https://apis.google.com")

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'corsheaders.middleware.CorsMiddleware',
    'django.middleware.common.CommonMiddleware'
    
]
MIDDLEWARE.insert(
    MIDDLEWARE.index('django.middleware.security.SecurityMiddleware') + 1,
    'csp.middleware.CSPMiddleware'
)

CSP_MIDDLEWARE = {
    'default-src': CSP_DEFAULT_SRC,
    'script-src': CSP_SCRIPT_SRC,
    # Add other directives as needed
}

CSP_MIDDLEWARE.update(getattr(settings, 'CSP_MIDDLEWARE', {}))

ROOT_URLCONF = 'ecom.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'ecom.wsgi.application'


# Database
# https://docs.djangoproject.com/en/3.0/ref/settings/#databases

DATABASES = {
    'default':{
        'ENGINE': 'django.db.backends.postgresql',
        'NAME': 'portfolio_tk_db',
        'USER': 'TaishawnKingCEO',
        'PASSWORD':'Zululike1',
        'HOST': 'database-1.c4qgyp7wedyb.us-east-1.rds.amazonaws.com',
        'Port': '5432',
        'OPTIONS': {'options': '-c timezone=UTC'},
    }
    # 'default': {
    #     'ENGINE': 'django.db.backends.sqlite3',
    #     'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),
    # }
}


# Password validation
# https://docs.djangoproject.com/en/3.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/3.0/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True




# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/3.0/howto/static-files/

STATIC_URL = '/static/'
MEDIA_URL ='/media/'# I added this in to handle our midea folders and files 
MEDIA_ROOT = os.path.join(BASE_DIR, 'media')# creats pathing from our media_root to our Base dir

#To allow django-admin collectstatic to automatically put your static files in your bucket set the following in your settings.py:
STATICFILES_STORAGE = 'storages.backends.s3boto3.S3StaticStorage'

AUTH_USER_MODEL = 'user.CustomUser' #telling our project we have a CustomeUser


REST_FRAMEWORK = {# added this in myself as well setts default permissions that can be customized letter if we would like
    # Use Django's standard `django.contrib.auth` permissions,
    # or allow read-only access for unauthenticated users.
    'DEFAULT_AUTHENTICATION_CLASSES': [#this was added from the api guide Autherization section
        'rest_framework.authentication.BasicAuthentication',
        'rest_framework.authentication.SessionAuthentication',
        'rest_framework.authentication.TokenAuthentication'
    ],
    'DEFAULT_PERMISSION_CLASSES': [#this was added from the install section of the documentation
        'rest_framework.permissions.DjangoModelPermissionsOrAnonReadOnly'
    ]
}
STATICFILES_DIRS = [
    os.path.join(BASE_DIR, 'path/to/folder/containing/favicon.ico'),
]



